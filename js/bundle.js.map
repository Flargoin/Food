{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA,uBAAuB,UAAU,MAAM,SAAS;AAChD,8CAA8C,WAAW;AACzD,4CAA4C,WAAW;AACvD;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;;;;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,QAAQ;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;ACzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,sCAAsC,WAAW;AACjD,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,WAAW;AACrD,cAAc;AACd;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;;;;;;;;;;ACtJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCpFA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;AACb;AACA;AACA;AACA,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,gBAAgB,mBAAO,CAAC,4CAAgB;AACxC,iBAAiB,mBAAO,CAAC,8CAAiB;AAC1C,kBAAkB,mBAAO,CAAC,gDAAkB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/webpack/bootstrap","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = \"__\";\r\n            return;\r\n        }\r\n\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n\r\n                console.log(ratio, sex);\r\n\r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n\r\n                e.target.classList.add(activeClass);\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n            switch (input.getAttribute('id')) {\r\n                case 'height':\r\n                    height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n            calcTotal();\r\n        });\r\n\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {\r\n            this.src = src;\r\n            this.alt = alt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.parent = document.querySelector(parentSelector);\r\n            this.transfer = 35;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        render() {\r\n            const element = document.createElement('div');\r\n            if (this.classes.length <= 0) {\r\n                this.element = 'menu__item';\r\n                element.classList.add(this.element);\r\n            } else {\r\n                this.classes.forEach(className => element.classList.add(className));\r\n            }\r\n            element.innerHTML = `\r\n            <img src=${this.src} alt=${this.alt}>\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.descr}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n            </div>\r\n        `;\r\n            this.parent.append(element);\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => {\r\n        const res = await fetch(url);\r\n        /* \r\n            Если fetch сталкивается с ошибкой в http статусе, это не будет ошибкой для fetch\r\n            Ошибки для fetch:\r\n            1) Отсутствие интернета\r\n            2) критические неполадки в самом запросе.\r\n\r\n            свойства промиса fetch:\r\n            .ok - запрос выполнился и мы что-то получили\r\n            .status - получаем http статус 200, 404, 501\r\n        */\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    /* Переписал код по созданию экземпляров класса */\r\n    getResource('http://localhost:3000/menu')\r\n        .then(data => {\r\n            data.forEach(({\r\n                img,\r\n                altimg,\r\n                title,\r\n                descr,\r\n                price\r\n            }) => {\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n            });\r\n        });\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    /* Создаём объект с сообщениями для пользователя */\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся.',\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n    /* Подвязываем каждую форму к функции запроса */\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    /* \r\n        Создаём функцию для запросов на сервер.\r\n        Но так как это асинхронный код, нужно немного его доработать (async/await ES8)\r\n        async - ставится перед функцией\r\n        await - ставится перед операциями которые необходимо дождаться.\r\n        Эта конструкция нужна для того чтобы вызывая функцию мы точно увидели результат полученный от сервера.\r\n    */\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n\r\n        return await res.json();\r\n    }\r\n\r\n\r\n    /* \r\n        Создаём функцию которая будет отправлять данные на сервер.\r\n        Передаём в аргумент форму, чтобы потом было удобно навешывать обработчик события.\r\n    */\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            /* Отменяем дефолтное поведение браузера */\r\n            e.preventDefault();\r\n\r\n            /* Создаём элемент который будем показывать для оповещения пользователя о статусе */\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n         display: block;\r\n         margin: 0 auto;\r\n         `;\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            /* \r\n                Создаём концепцию FormData которая будет собирать данные из формы которую мы передаём как аргумент \r\n                (ОСТОРОЖНО!!! МЫ ВСЕГДА ДОЛЖНЫ УКАЗЫВАТЬ У ИНПУТОВ АТРИБУТ name!!!)\r\n            */\r\n            const formData = new FormData(form);\r\n\r\n            /* Переделал преобразование в json */\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // Вызываем нашу функцию которая возвращает промис\r\n            postData('http://localhost:3000/requests', json)\r\n                .then(data => {\r\n                    showThanksModal(message.success);\r\n                    statusMessage.remove()\r\n                })\r\n                .catch(() => {\r\n                    showThanksModal(message.failure);\r\n                })\r\n                .finally(() => {\r\n                    form.reset();\r\n                });\r\n\r\n        });\r\n    };\r\n\r\n    /* Создаём окно с благодарностью */\r\n    function showThanksModal(message) {\r\n        /* Скрываем предыдущий контент */\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n        prevModalDialog.classList.add('hide');\r\n\r\n        /* Создаём новую структуру окна */\r\n        openModal();\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n     <div class=\"modal__content\">\r\n         <div class=\"modal__close\" data-close>×</div>\r\n         <div class=\"modal__title\">${message}</div>\r\n     </div>\r\n     `;\r\n\r\n        /* Показывать 4 секунды окно с благодарностью, затем закрывать окно и возвращать всё на место */\r\n        document.querySelector('.modal').append(thanksModal);\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000)\r\n    }\r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n    const modal = document.querySelector('.modal'),\r\n        modalTrigger = document.querySelectorAll('[data-modal]');\r\n\r\n    function openModal() {\r\n        modal.classList.add('show');\r\n        modal.classList.remove('hide');\r\n        document.body.style.overflow = 'hidden';\r\n        clearInterval(modalTimerId);\r\n    }\r\n\r\n    function closeModal() {\r\n        modal.classList.remove('show');\r\n        modal.classList.add('hide');\r\n        document.body.style.overflow = '';\r\n    }\r\n\r\n    modalTrigger.forEach(btn => {\r\n        btn.addEventListener('click', openModal);\r\n    });\r\n\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal();\r\n        };\r\n    });\r\n\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal();\r\n        };\r\n    });\r\n\r\n    const modalTimerId = setTimeout(openModal, 5000);\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal();\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    };\r\n\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    // 1) Получаем элементы со страницы\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        slider = document.querySelector('.offer__slider'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        slidesField = document.querySelector('.offer__slider-inner'),\r\n        // Получаем применённые стили к элементу, в данном случае width   \r\n        width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    // 2) Переменная которая поможет индексировать слайды (Указываем 1 потому что мы выводим это значение для пользователей)\r\n    let slideIndex = 1;\r\n    // 7) Создаём переменную для отсчёта сдвига карусели\r\n    let offset = 0;\r\n\r\n    // 9) \r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    // 3) Установим блоку со слайдами ширину.\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n\r\n    // 4)Помещаем полученное значение width в свойство ширины каждого слайда\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    // Устанавливаем относительное позиционирование карусели\r\n    slider.style.position = 'relative';\r\n\r\n    // Создаём обёртку для навигации и даём ему класс со стилями\r\n    const indicators = document.createElement('ol'),\r\n        dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    slider.append(indicators);\r\n\r\n    // Создаём сами точки и назначаем им атрибут со значениями от 1 до значения slides.length\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.classList.add('dot');\r\n\r\n        // Если это первый элемент то добавлять стиль\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    // 5) Прописываем нужные стили для блока со слайдами (позже выведу стили в отдельные классы)\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    // 6) Ограничиваем область контента карусели (чтобы показывать 1 слайд из всех)\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    function deleteNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    // 8) Нужно назначить обработчик события движения карусели\r\n    next.addEventListener('click', () => {\r\n        // Проверяем 650px * 3 слайда (не на 4 потому что мы отсчитываем от 0, мы 3 раза листаем добавляя 650, на 4 клик мы возвращаемся в начало)\r\n        if (offset === deleteNotDigits(width) * (slides.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        // Если индекс слайда будет равен общему кол-ву слайдов в каруселе - это значит что мы дошли до конца карусели, нужно перейти в начало карусели. Иначе изменять индекс слайда.\r\n        if (slideIndex === slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        // Также нужно регулировать отображение число индекса\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        // Переюираем каждую точку в массиве dots и делать прозрачной, а точку с индексом слайда делать активной яркой\r\n        dots.forEach(dot => dot.style.opacity = '0.5');\r\n        dots[slideIndex - 1].style.opacity = '1';\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        // Проверяем 650px * 3 слайда (не на 4 потому что мы отсчитываем от 0, мы 3 раза листаем добавляя 650, на 4 клик мы возвращаемся в начало)\r\n        if (offset === 0) {\r\n            offset = deleteNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            offset -= deleteNotDigits(width);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        // Если индекс слайда будет равен общему кол-ву слайдов в каруселе - это значит что мы дошли до конца карусели, нужно перейти в начало карусели. Иначе изменять индекс слайда.\r\n        if (slideIndex === 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        // Также нужно регулировать отображение число индекса\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '0.5');\r\n        dots[slideIndex - 1].style.opacity = '1';\r\n    });\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = +e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = deleteNotDigits(width) * (slideTo - 1);\r\n\r\n            if (slides.length < 10) {\r\n                current.textContent = `0${slideIndex}`;\r\n            } else {\r\n                current.textContent = slideIndex;\r\n            }\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n            dots.forEach(dot => dot.style.opacity = '0.5');\r\n            dots[slideIndex - 1].style.opacity = '1';\r\n        });\r\n    });\r\n}\r\n\r\nmodule.exports = slider;","function tabs() {\r\n    const parentTabs = document.querySelector('.tabheader__items'),\r\n        tab = document.querySelectorAll('.tabheader__item'),\r\n        tabContent = document.querySelectorAll('.tabcontent');\r\n\r\n    function hideTabContent() {\r\n        tabContent.forEach(item => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tab.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        })\r\n    }\r\n\r\n    function showTabContent(i = 0) {\r\n        tabContent[i].classList.add('show', 'fade');\r\n        tabContent[i].classList.remove('hide');\r\n\r\n        tab[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    parentTabs.addEventListener('click', (e) => {\r\n        const target = e.target;\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tab.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i);\r\n                }\r\n            })\r\n        }\r\n    });\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    /* Создаём переменную до которой таймер будет отсчитывать */\r\n    const deadline = '2023-03-17';\r\n\r\n    /*\r\n     Создаём функцию которая будет высчитывать разницу между нынешней датой и датой окончания акции :\r\n        1) Создаём переменные для помещение числовых значений.\r\n        2) Создаём техническую переменную в которую получаем разницу в милисекундах\r\n        3) Создаём проверку на отрицательное значение\r\n        4) Если t = 0 и меньше - показывать нули, если > нуля - преобразовывать милисекунды в нужные данные\r\n        5) Вернуть объект с получившимся значениями.\r\n     */\r\n    function getTimeRemaining(endtime) {\r\n        let days, hours, minutes, seconds;\r\n        const t = Date.parse(endtime) - Date.parse(new Date());\r\n        if (t <= 0) {\r\n            days = 0;\r\n            hours = 0;\r\n            minutes = 0;\r\n            seconds = 0\r\n        } else {\r\n            days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n                hours = Math.floor((t / (1000 * 60 * 60) % 24)),\r\n                minutes = Math.floor((t / 1000 / 60) % 60),\r\n                seconds = Math.floor((t / 1000) % 60);\r\n        }\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n\r\n    /* \r\n        Создаём функцию подстановки нуля однозначным числам.\r\n    */\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    /* \r\n        Функция которая будет показывать время на странице:\r\n        1) Получаем элементы на странице\r\n        2) Вызываем обновление таймера (UpdataeClock) каждую секунду.\r\n        3) Создаём внутри функцию обновления таймера:\r\n            - помещаем в техническую переменную (t) возвращенный объект функцией getRemaining(), endtime придёт от setClock.\r\n            - помещаем в каждый полученный элемент соответствующее значение объекта с вызовом функции getZero().\r\n            - если общее число милисекунд меньше нуля, таймер не обновляется.\r\n    */\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n            days = timer.querySelector('#days'),\r\n            hours = timer.querySelector('#hours'),\r\n            minutes = timer.querySelector('#minutes'),\r\n            seconds = timer.querySelector('#seconds'),\r\n            timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock();\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock('.timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\r\n\r\n/* Событие которое ждёт прогрузки DOM */\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n   const tabs = require('./modules/tabs'),\r\n         modal = require('./modules/modal'),\r\n         timer = require('./modules/timer'),\r\n         cards = require('./modules/cards'),\r\n         calc = require('./modules/calc'),\r\n         forms = require('./modules/forms'),\r\n         slider = require('./modules/slider');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n});"],"names":[],"sourceRoot":""}